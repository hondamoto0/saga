{"ast":null,"code":"var _jsxFileName = \"/Users/phongdang/Desktop/Projects(Reactjs)/nghiepuit/learning-redux-saga-material-ui-redux-form/src/containers/Taskboard/index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TaskList from '../../components/TaskList/index';\nimport TaskForm from '../../components/TaskForm/index';\nimport styles from './styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { STATUSES } from '../../constants/index';\nimport * as taskActions from './../../actions/task';\nconst listTask = [{\n  id: 1,\n  title: 'Read book',\n  description: 'Read material ui book',\n  status: 0\n}, {\n  id: 2,\n  title: 'Play football',\n  description: 'With my friend',\n  status: 2\n}, {\n  id: 3,\n  title: 'Play game',\n  description: 'Read material ui book',\n  status: 1\n}];\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.openForm = () => {\n      this.setState({\n        open: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      taskActionsCreators\n    } = this.props;\n    const {\n      fetchListTaskRequest\n    } = taskActionsCreators;\n    fetchListTaskRequest();\n  }\n\n  renderBoard() {\n    let xhtml = null;\n    xhtml = /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        margin: 0\n      },\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, ' ', STATUSES.map(status => {\n      const taskFiltered = listTask.filter(task => task.status === status.value);\n      return /*#__PURE__*/React.createElement(TaskList, {\n        key: status.value,\n        tasks: taskFiltered,\n        status: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      });\n    }), ' ');\n    return xhtml;\n  }\n\n  renderForm() {\n    const {\n      open\n    } = this.state;\n    let xhtml = null;\n    xhtml = /*#__PURE__*/React.createElement(TaskForm, {\n      open: open,\n      handleClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    });\n    return xhtml;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.openForm,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), \" them moi cong viec\"), this.renderBoard(), this.renderForm());\n  }\n\n}\n\nTaskBoard.propTypes = {\n  classes: PropTypes.object\n};\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    taskActionsCreators: bindActionCreators(taskActions, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(TaskBoard));","map":{"version":3,"sources":["/Users/phongdang/Desktop/Projects(Reactjs)/nghiepuit/learning-redux-saga-material-ui-redux-form/src/containers/Taskboard/index.js"],"names":["React","Component","withStyles","PropTypes","AddIcon","Button","Grid","TaskList","TaskForm","styles","bindActionCreators","connect","STATUSES","taskActions","listTask","id","title","description","status","TaskBoard","state","open","handleClose","setState","openForm","componentDidMount","taskActionsCreators","props","fetchListTaskRequest","renderBoard","xhtml","margin","map","taskFiltered","filter","task","value","renderForm","render","classes","taskboard","button","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TaskList from '../../components/TaskList/index';\nimport TaskForm from '../../components/TaskForm/index';\n\nimport styles from './styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { STATUSES } from '../../constants/index';\nimport * as taskActions from './../../actions/task';\n\nconst listTask = [\n  {\n    id: 1,\n    title: 'Read book',\n    description: 'Read material ui book',\n    status: 0,\n  },\n  {\n    id: 2,\n    title: 'Play football',\n    description: 'With my friend',\n    status: 2,\n  },\n  {\n    id: 3,\n    title: 'Play game',\n    description: 'Read material ui book',\n    status: 1,\n  },\n];\n\nclass TaskBoard extends Component {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    const { taskActionsCreators } = this.props;\n    const { fetchListTaskRequest } = taskActionsCreators;\n    fetchListTaskRequest();\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  openForm = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  renderBoard() {\n    let xhtml = null;\n    xhtml = (\n      <Grid\n        style={{\n          margin: 0,\n        }}\n        container\n        spacing={2}\n      >\n        {' '}\n        {STATUSES.map(status => {\n          const taskFiltered = listTask.filter(\n            task => task.status === status.value,\n          );\n          return (\n            <TaskList key={status.value} tasks={taskFiltered} status={status} />\n          );\n        })}{' '}\n      </Grid>\n    );\n    return xhtml;\n  }\n\n  renderForm() {\n    const { open } = this.state;\n    let xhtml = null;\n    xhtml = <TaskForm open={open} handleClose={this.handleClose} />;\n    return xhtml;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.taskboard}>\n        <Button\n          onClick={this.openForm}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          <AddIcon /> them moi cong viec\n        </Button>\n        {this.renderBoard()}\n        {this.renderForm()}\n      </div>\n    );\n  }\n}\n\nTaskBoard.propTypes = {\n  classes: PropTypes.object,\n};\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = dispatch => {\n  return {\n    taskActionsCreators: bindActionCreators(taskActions, dispatch),\n  };\n};\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, mapDispatchToProps)(TaskBoard),\n);\n"]},"metadata":{},"sourceType":"module"}